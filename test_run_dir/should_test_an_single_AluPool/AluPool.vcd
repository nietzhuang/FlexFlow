$date
2022-02-18T12:53+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module AluPool $end
 $var wire 32 ! io_ALUPort_PEDataIn_15 $end
 $var wire 32 " io_ALUPort_PEDataIn_12 $end
 $var wire 32 # io_ALUPort_PEDataIn_4 $end
 $var wire 32 $ io_ALUPort_PEDataIn_7 $end
 $var wire 32 % io_ALUPort_PEDataIn_1 $end
 $var wire 1 & io_ALUPort_Enable $end
 $var wire 32 ' io_ALUPort_PEDataIn_11 $end
 $var wire 4 ( io_ALUPort_BankIdx $end
 $var wire 32 ) io_ALUPort_PEDataIn_14 $end
 $var wire 32 * io_ALUPort_PEDataIn_0 $end
 $var wire 32 + io_ALUPort_PEDataIn_9 $end
 $var wire 32 , io_ALUPort_PEDataIn_3 $end
 $var wire 32 - io_ALUPort_DataOut $end
 $var wire 10 . cntMac $end
 $var wire 1 / clock $end
 $var wire 32 0 io_ALUPort_PEDataIn_6 $end
 $var wire 32 1 io_ALUPort_PsumIn $end
 $var wire 32 2 io_ALUPort_PEDataIn_10 $end
 $var wire 32 3 io_ALUPort_PEDataIn_13 $end
 $var wire 32 4 io_ALUPort_PEDataIn_5 $end
 $var wire 10 5 io_ALUPort_PsumAddr $end
 $var wire 32 6 io_ALUPort_PEDataIn_8 $end
 $var wire 32 7 accumulator $end
 $var wire 10 8 io_ALUPort_Neuron2Addr $end
 $var wire 1 9 reset $end
 $var wire 32 : io_ALUPort_PEDataIn_2 $end
$upscope $end
$enddefinitions $end
$dumpvars
0&
b00000000000000000000000000000000 '
b00000000000000000000000000000000 6
b0000 (
b0000000000 .
b00000000000000000000000000000000 !
0/
b0000000000 5
b00000000000000000000000000000000 0
b00000000000000000000000000000000 7
b00000000000000000000000000000000 "
b00000000000000000000000000000000 1
b00000000000000000000000000000000 )
b00000000000000000000000000000000 #
b00000000000000000000000000000000 *
b0000000000 8
b00000000000000000000000000000000 +
09
b00000000000000000000000000000000 :
b00000000000000000000000000000000 2
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 $
b00000000000000000000000000000000 3
b00000000000000000000000000000000 -
b00000000000000000000000000000000 %
b00000000000000000000000000000000 4
$end
#0
19
#1
1/
#6
b00000000000000000000000000000001 3
b00000000000000000000000000010001 -
b00000000000000000000000000000001 %
b00000000000000000000000000000001 4
1&
b00000000000000000000000000000001 '
b00000000000000000000000000000001 6
b00000000000000000000000000010000 7
0/
b00000000000000000000000000000001 )
b00000000000000000000000000000001 !
b00000000000000000000000000000001 0
b00000000000000000000000000000001 "
b00000000000000000000000000000001 1
b00000000000000000000000000000001 #
b00000000000000000000000000000001 2
b00000000000000000000000000000001 *
09
b00000000000000000000000000000001 $
b00000000000000000000000000000001 +
b00000000000000000000000000000001 :
b00000000000000000000000000000001 ,
#11
b0000000001 .
b0000000001 8
b0000000001 5
1/
#16
0/
#21
b0000000010 .
b0000000010 8
b0000000010 5
1/
#26
0/
#31
b0000000011 .
b0000000011 8
b0000000011 5
1/
#36
0/
#41
b0000000100 .
b0000000100 8
b0000000100 5
1/
#46
0/
#51
b0000000101 .
b0000000101 8
b0000000101 5
1/
#56
0/
#61
b0000000110 .
b0000000110 8
b0000000110 5
1/
#66
0/
#71
b0000000111 .
b0000000111 8
b0000000111 5
1/
#76
0/
#81
b0000001000 .
b0000001000 8
b0000001000 5
1/
#86
0/
#91
b0000001001 .
b0000001001 8
b0000001001 5
1/
#96
0/
#101
b0000001010 .
b0000001010 8
b0000001010 5
1/
#106
0/
#111
b0000001011 .
b0000001011 8
b0000001011 5
1/
#116
b00000000000000000000000000000000 3
b00000000000000000000000000000000 %
b00000000000000000000000000000000 4
0&
b00000000000000000000000000000000 '
b00000000000000000000000000000000 6
0/
b00000000000000000000000000000000 )
b00000000000000000000000000000000 !
b00000000000000000000000000000000 0
b00000000000000000000000000000000 "
b00000000000000000000000000000000 1
b00000000000000000000000000000000 #
b00000000000000000000000000000000 2
b00000000000000000000000000000000 *
b00000000000000000000000000000000 $
b00000000000000000000000000000000 +
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ,
